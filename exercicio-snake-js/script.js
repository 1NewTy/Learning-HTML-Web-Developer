//Used this variable to read our html file
let canvas = document.getElementById("game");
//Returning the drawing method of our canvas -> In this case a 2d graphic
let context = canvas.getContext("2d");
//Giving our "box" variable a value for each game "pixel"
let box = 16;
//Defining an array in coordinates to be the snake (x and y represents the inicial position)
let snake = [];
snake[0] = {
    x: 25*box,
    y: 25*box
};
//Creating food array to specify food position
let food = {
    //Math.floor removes the float part of the random number between 1 and 49 generated by Math.random -> Commonly Math.random generates numbers between 0 and 1, but when we writted (* 49 + 1) we asked for a random number generation between 1 and 49
    x: Math.floor(Math.random() * 49 + 1) * box,
    y: Math.floor(Math.random() * 49 + 1) * box
};
//Defining the direction variable (inicial direction)
let direction = "right";

//Function to create our game background
function createBG(){
    //Sets the canvas background color
    context.fillStyle = "#030029";
    //Drawing a filled rectangle specifying the center and size
    context.fillRect(0,0,box*50,box*50);
};

//Creating snake
function createSnake(){
    //Creating the box of the snake in canvas (initially the array length is "1", so we will just color 1 block in for loop, when our i achieves "i=1", we'll move out the loop)
    for(i=0; i < snake.length; i++){
        context.fillStyle = "lightgray";
        context.fillRect(snake[i].x,snake[i].y,box,box);
    };
};

//Drawing snake food
function drawFood(){
    context.fillStyle = "yellow";
    context.fillRect(food.x,food.y,box,box);
};

//Saying to the program pay attention in any keyboard press (click event). If there's any, start a function
document.addEventListener("keydown",update);

//Creating update function to change the snake direction
function update(event){
    if(event.keyCode == 37 && direction != "right"){direction = "left"};
    if(event.keyCode == 38 && direction !="down"){direction = "up"};
    if(event.keyCode == 39 && direction !="left"){direction = "right"};
    if(event.keyCode == 40 && direction !="up"){direction = "down"};
};


function gameStart(){
    
    //Creating if to snake come across the wall and appear in the other side
    if(snake[0].x > box*49 && direction == "right"){snake[0].x = box};
    if(snake[0].x < box && direction == "left"){snake[0].x = box*49};
    if(snake[0].y < box && direction == "up"){snake[0].y = box*49};
    if(snake[0].y > box*49 && direction == "down"){snake[0].y = box};

    //Creating the game over condition
    for(i=1; i < snake.length; i++){
        if(snake[0].x == snake[i].x && snake[0].y == snake[i].y){
            clearInterval(jogo);
            alert('game over!');
        };
    };

    createBG();
    createSnake();
    drawFood();

    //Defining axis for our snake position
    let snakeX = snake[0].x;
    let snakeY = snake[0].y;

    //Creating the movement logic
    if(direction == "right"){
        snakeX = snakeX+box;
    } else if(direction =="left"){
        snakeX = snakeX-box;
    } else if(direction == "up"){
        snakeY = snakeY-box;
    } else if(direction == "down"){
        snakeY = snakeY+box;
    };

    //If to verify if food and snake's head has the same coordinates
    if(snakeX != food.x || snakeY != food.y){
        //This element will remove the last poition of our array
        snake.pop();
    } else {
        food.x = Math.floor(Math.random() * 49 + 1) * box;
        food.y = Math.floor(Math.random() * 49 + 1) * box;
    };

    //Creating the new head of our snake (always in front of the old head)
    let newhead = {
        x: snakeX,
        y: snakeY
    };

    //Unshift function allow us to add element to an array in the beggining
    snake.unshift(newhead);
}

//The variable below will call "gameStart" funcion every 0,1s (This function will display the movement of our snake)
let snakegame = setInterval(gameStart,80);